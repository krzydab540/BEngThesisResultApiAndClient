{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\source\\\\repos\\\\LaboratoryApplication\\\\client-app\\\\src\\\\stores\\\\LoginForm.jsx\";\nimport React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./UserStore\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 20) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false\n    };\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      // access API\n      let res = await fetch(\"/login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        }) // this will send username and pass to API which will be checked in DB then checked if exists and create session\n\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg); //TODO: Add message\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Login form\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : \"\",\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/PC/source/repos/LaboratoryApplication/client-app/src/stores/LoginForm.jsx"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","Accept","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./UserStore\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 20) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val,\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState = {\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true,\r\n    });\r\n\r\n    try {\r\n      // access API\r\n      let res = await fetch(\"/login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        }),\r\n        // this will send username and pass to API which will be checked in DB then checked if exists and create session\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg); //TODO: Add message\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Login form\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={this.state.username ? this.state.username : \"\"}\r\n          onChange={(val)=>this.setInputValue('username', val)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}