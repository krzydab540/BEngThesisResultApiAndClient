{"ast":null,"code":"import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\r\n * FinalizationRegistry-based uncommitted reaction cleanup\r\n */\n\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n  var cleanupTokenToReactionTrackingMap = new Map();\n  var globalCleanupTokensCounter = 1;\n  var registry = new FinalizationRegistry(function cleanupFunction(token) {\n    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n\n    if (trackedReaction) {\n      trackedReaction.reaction.dispose();\n      cleanupTokenToReactionTrackingMap.delete(token);\n    }\n  });\n  return {\n    addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n      var token = globalCleanupTokensCounter++;\n      registry.register(objectRetainedByReact, token, reactionTrackingRef);\n      reactionTrackingRef.current = createTrackingData(reaction);\n      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: function (reactionRef) {\n      registry.unregister(reactionRef);\n\n      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n      }\n    },\n    forceCleanupTimerToRunNowForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    },\n    resetCleanupScheduleForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    }\n  };\n}","map":{"version":3,"sources":["../../src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts"],"names":[],"mappings":"AAEA,SAGI,kBAHJ,QAIO,iCAJP;AAMA;;AAEG;;AACH,OAAM,SAAU,sDAAV,CACF,oBADE,EAC0E;AAE5E,MAAM,iCAAiC,GAAG,IAAI,GAAJ,EAA1C;AACA,MAAI,0BAA0B,GAAG,CAAjC;AAEA,MAAM,QAAQ,GAAG,IAAI,oBAAJ,CAAyB,SAAS,eAAT,CAAyB,KAAzB,EAAsC;AAC5E,QAAM,eAAe,GAAG,iCAAiC,CAAC,GAAlC,CAAsC,KAAtC,CAAxB;;AACA,QAAI,eAAJ,EAAqB;AACjB,MAAA,eAAe,CAAC,QAAhB,CAAyB,OAAzB;AACA,MAAA,iCAAiC,CAAC,MAAlC,CAAyC,KAAzC;AACH;AACJ,GANgB,CAAjB;AAQA,SAAO;AACH,IAAA,kBAAkB,EAAlB,UACI,mBADJ,EAEI,QAFJ,EAGI,qBAHJ,EAGiC;AAE7B,UAAM,KAAK,GAAG,0BAA0B,EAAxC;AAEA,MAAA,QAAQ,CAAC,QAAT,CAAkB,qBAAlB,EAAyC,KAAzC,EAAgD,mBAAhD;AACA,MAAA,mBAAmB,CAAC,OAApB,GAA8B,kBAAkB,CAAC,QAAD,CAAhD;AACA,MAAA,mBAAmB,CAAC,OAApB,CAA4B,gCAA5B,GAA+D,KAA/D;AACA,MAAA,iCAAiC,CAAC,GAAlC,CAAsC,KAAtC,EAA6C,mBAAmB,CAAC,OAAjE;AAEA,aAAO,mBAAmB,CAAC,OAA3B;AACH,KAdE;AAeH,IAAA,yBAAyB,EAAzB,UAA0B,WAA1B,EAAuF;AACnF,MAAA,QAAQ,CAAC,UAAT,CAAoB,WAApB;;AAEA,UAAI,WAAW,CAAC,OAAZ,IAAuB,WAAW,CAAC,OAAZ,CAAoB,gCAA/C,EAAiF;AAC7E,QAAA,iCAAiC,CAAC,MAAlC,CACI,WAAW,CAAC,OAAZ,CAAoB,gCADxB;AAGH;AACJ,KAvBE;AAwBH,IAAA,iCAAiC,EAAA,YAAA,CAC7B;AACH,KA1BE;AA2BH,IAAA,4BAA4B,EAAA,YAAA,CACxB;AACH;AA7BE,GAAP;AA+BH","sourceRoot":"","sourcesContent":["import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\r\n/**\r\n * FinalizationRegistry-based uncommitted reaction cleanup\r\n */\r\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\r\n    var cleanupTokenToReactionTrackingMap = new Map();\r\n    var globalCleanupTokensCounter = 1;\r\n    var registry = new FinalizationRegistry(function cleanupFunction(token) {\r\n        var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\r\n        if (trackedReaction) {\r\n            trackedReaction.reaction.dispose();\r\n            cleanupTokenToReactionTrackingMap.delete(token);\r\n        }\r\n    });\r\n    return {\r\n        addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\r\n            var token = globalCleanupTokensCounter++;\r\n            registry.register(objectRetainedByReact, token, reactionTrackingRef);\r\n            reactionTrackingRef.current = createTrackingData(reaction);\r\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\r\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\r\n            return reactionTrackingRef.current;\r\n        },\r\n        recordReactionAsCommitted: function (reactionRef) {\r\n            registry.unregister(reactionRef);\r\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\r\n                cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\r\n            }\r\n        },\r\n        forceCleanupTimerToRunNowForTests: function () {\r\n            // When FinalizationRegistry in use, this this is no-op\r\n        },\r\n        resetCleanupScheduleForTests: function () {\r\n            // When FinalizationRegistry in use, this this is no-op\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=createReactionCleanupTrackingUsingFinalizationRegister.js.map"]},"metadata":{},"sourceType":"module"}