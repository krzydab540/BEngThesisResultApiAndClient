{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\source\\\\repos\\\\LaboratoryApplication\\\\client-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { render } from \"@testing-library/react\";\nimport \"./App.css\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport { observer } from 'mobx-react';\nimport Home from './pages/common/Home';\nimport About from './pages/common/About';\nimport Contact from './pages/common/Contact';\n\nclass App extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", // requires API endpoint\n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", // requires API endpoint \n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    ///////////////////// LOGGING HIDDEN\n    // // TODO: Change to React Router to change views\n    // // TODO: Add validation to check if user is logged in => bearer token\n    // if (UserStore.loading) {\n    //   return (\n    //     <div className=\"app\">\n    //       <div className=\"container\">Loading please wait</div>\n    //     </div>\n    //   );\n    // }\n    // else {\n    //   if (UserStore.isLoggedIn) {\n    //     return (\n    //       <div className=\"app\">\n    //         <div className=\"container\">\n    //           Welcome {UserStore.userName}\n    //           <SubmitButton\n    //             text={\"Log out\"}\n    //             disabled={false}\n    //             onClick={() => this.doLogout}\n    //           ></SubmitButton>\n    //         </div>\n    //       </div>\n    //     )\n    //   }\n    // }\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to React Router Tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/',\n                className: \"nav-link\",\n                children: \" Home \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/contact',\n                className: \"nav-link\",\n                children: \"Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/about',\n                className: \"nav-link\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact\",\n            component: Contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this); // return (\n    //   <div className=\"app\">\n    //     <div className=\"container\">\n    //       <LoginForm />\n    //     </div>\n    //   </div>\n    // );\n  }\n\n}\n\nexport default _c = observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/PC/source/repos/LaboratoryApplication/client-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","render","UserStore","LoginForm","SubmitButton","observer","Home","About","Contact","App","componentDidMount","res","fetch","method","headers","Accept","result","json","success","loading","isLoggedIn","userName","e","doLogout","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { render } from \"@testing-library/react\";\nimport \"./App.css\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport { observer } from 'mobx-react';\n\nimport Home from './pages/common/Home';\nimport About from './pages/common/About';\nimport Contact from './pages/common/Contact';\n\n\nclass App extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\n        \"/isLoggedIn\", // requires API endpoint\n        {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\n        \"/logout\", // requires API endpoint \n        {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {            \n    \n    ///////////////////// LOGGING HIDDEN\n    \n    // // TODO: Change to React Router to change views\n    // // TODO: Add validation to check if user is logged in => bearer token\n    // if (UserStore.loading) {\n    //   return (\n    //     <div className=\"app\">\n    //       <div className=\"container\">Loading please wait</div>\n    //     </div>\n    //   );\n    // }\n\n    // else {\n    //   if (UserStore.isLoggedIn) {\n    //     return (\n    //       <div className=\"app\">\n    //         <div className=\"container\">\n    //           Welcome {UserStore.userName}\n    //           <SubmitButton\n    //             text={\"Log out\"}\n    //             disabled={false}\n    //             onClick={() => this.doLogout}\n    //           ></SubmitButton>\n    //         </div>\n    //       </div>\n    //     )\n    //   }\n    // }\n\n    return (\n      <Router>\n          <div>\n            <h2>Welcome to React Router Tutorial</h2>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li><Link to={'/'} className=\"nav-link\"> Home </Link></li>\n              <li><Link to={'/contact'} className=\"nav-link\">Contact</Link></li>\n              <li><Link to={'/about'} className=\"nav-link\">About</Link></li>\n            </ul>\n            </nav>\n            <hr />\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/contact' component={Contact} />\n                <Route path='/about' component={About} />\n            </Switch>\n          </div>\n        </Router>\n      );\n\n\n\n    // return (\n    //   <div className=\"app\">\n    //     <div className=\"container\">\n    //       <LoginForm />\n    //     </div>\n    //   </div>\n    // );\n\n  }\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}