{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { forwardRef, memo } from \"react\";\nimport { isUsingStaticRendering } from \"./staticRendering\";\nimport { useObserver } from \"./useObserver\"; // n.b. base case is not used for actual typings or exported in the typing files\n\nexport function observer(baseComponent, options) {\n  // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n  if (isUsingStaticRendering()) {\n    return baseComponent;\n  }\n\n  var realOptions = __assign({\n    forwardRef: false\n  }, options);\n\n  var baseComponentName = baseComponent.displayName || baseComponent.name;\n\n  var wrappedComponent = function (props, ref) {\n    return useObserver(function () {\n      return baseComponent(props, ref);\n    }, baseComponentName);\n  };\n\n  wrappedComponent.displayName = baseComponentName; // memo; we are not interested in deep updates\n  // in props; we assume that if deep objects are changed,\n  // this is in observables, which would have been tracked anyway\n\n  var memoComponent;\n\n  if (realOptions.forwardRef) {\n    // we have to use forwardRef here because:\n    // 1. it cannot go before memo, only after it\n    // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\n    //    since it wouldn't be a callable function anymore\n    memoComponent = memo(forwardRef(wrappedComponent));\n  } else {\n    memoComponent = memo(wrappedComponent);\n  }\n\n  copyStaticProperties(baseComponent, memoComponent);\n  memoComponent.displayName = baseComponentName;\n  return memoComponent;\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: true,\n  render: true,\n  compare: true,\n  type: true\n};\n\nfunction copyStaticProperties(base, target) {\n  Object.keys(base).forEach(function (key) {\n    if (!hoistBlackList[key]) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}","map":{"version":3,"sources":["../src/observer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,UAAT,EAAqB,IAArB,QAAiC,OAAjC;AAEA,SAAS,sBAAT,QAAuC,mBAAvC;AACA,SAAS,WAAT,QAA4B,eAA5B,C,CAmCA;;AACA,OAAM,SAAU,QAAV,CACF,aADE,EAEF,OAFE,EAEwB;AAE1B;AACA,MAAI,sBAAsB,EAA1B,EAA8B;AAC1B,WAAO,aAAP;AACH;;AAED,MAAM,WAAW,GAAA,QAAA,CAAA;AACb,IAAA,UAAU,EAAE;AADC,GAAA,EAEV,OAFU,CAAjB;;AAKA,MAAM,iBAAiB,GAAG,aAAa,CAAC,WAAd,IAA6B,aAAa,CAAC,IAArE;;AAEA,MAAM,gBAAgB,GAAG,UAAC,KAAD,EAAW,GAAX,EAA+B;AACpD,WAAO,WAAW,CAAC,YAAA;AAAM,aAAA,aAAa,CAAC,KAAD,EAAb,GAAa,CAAb;AAAyB,KAAhC,EAAkC,iBAAlC,CAAlB;AACH,GAFD;;AAGA,EAAA,gBAAgB,CAAC,WAAjB,GAA+B,iBAA/B,CAjB0B,CAmB1B;AACA;AACA;;AACA,MAAI,aAAJ;;AACA,MAAI,WAAW,CAAC,UAAhB,EAA4B;AACxB;AACA;AACA;AACA;AACA,IAAA,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAD,CAAX,CAApB;AACH,GAND,MAMO;AACH,IAAA,aAAa,GAAG,IAAI,CAAC,gBAAD,CAApB;AACH;;AAED,EAAA,oBAAoB,CAAC,aAAD,EAAgB,aAAhB,CAApB;AACA,EAAA,aAAa,CAAC,WAAd,GAA4B,iBAA5B;AAEA,SAAO,aAAP;AACH,C,CAED;;AACA,IAAM,cAAc,GAAQ;AACxB,EAAA,QAAQ,EAAE,IADc;AAExB,EAAA,MAAM,EAAE,IAFgB;AAGxB,EAAA,OAAO,EAAE,IAHe;AAIxB,EAAA,IAAI,EAAE;AAJkB,CAA5B;;AAOA,SAAS,oBAAT,CAA8B,IAA9B,EAAyC,MAAzC,EAAoD;AAChD,EAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAA,GAAA,EAAG;AACzB,QAAI,CAAC,cAAc,CAAC,GAAD,CAAnB,EAA0B;AACtB,MAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,GAA9B,EAAmC,MAAM,CAAC,wBAAP,CAAgC,IAAhC,EAAsC,GAAtC,CAAnC;AACH;AACJ,GAJD;AAKH","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { forwardRef, memo } from \"react\";\r\nimport { isUsingStaticRendering } from \"./staticRendering\";\r\nimport { useObserver } from \"./useObserver\";\r\n// n.b. base case is not used for actual typings or exported in the typing files\r\nexport function observer(baseComponent, options) {\r\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\r\n    if (isUsingStaticRendering()) {\r\n        return baseComponent;\r\n    }\r\n    var realOptions = __assign({ forwardRef: false }, options);\r\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\r\n    var wrappedComponent = function (props, ref) {\r\n        return useObserver(function () { return baseComponent(props, ref); }, baseComponentName);\r\n    };\r\n    wrappedComponent.displayName = baseComponentName;\r\n    // memo; we are not interested in deep updates\r\n    // in props; we assume that if deep objects are changed,\r\n    // this is in observables, which would have been tracked anyway\r\n    var memoComponent;\r\n    if (realOptions.forwardRef) {\r\n        // we have to use forwardRef here because:\r\n        // 1. it cannot go before memo, only after it\r\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\r\n        //    since it wouldn't be a callable function anymore\r\n        memoComponent = memo(forwardRef(wrappedComponent));\r\n    }\r\n    else {\r\n        memoComponent = memo(wrappedComponent);\r\n    }\r\n    copyStaticProperties(baseComponent, memoComponent);\r\n    memoComponent.displayName = baseComponentName;\r\n    return memoComponent;\r\n}\r\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\r\nvar hoistBlackList = {\r\n    $$typeof: true,\r\n    render: true,\r\n    compare: true,\r\n    type: true\r\n};\r\nfunction copyStaticProperties(base, target) {\r\n    Object.keys(base).forEach(function (key) {\r\n        if (!hoistBlackList[key]) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=observer.js.map"]},"metadata":{},"sourceType":"module"}