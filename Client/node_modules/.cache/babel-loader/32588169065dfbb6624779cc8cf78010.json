{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\source\\\\repos\\\\LaboratoryApplication\\\\LaboratoryServer\\\\LaboratoryServer\\\\client-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { render } from \"@testing-library/react\";\nimport \"./App.css\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport { observer } from 'mobx-react';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", // tu trzeba będzie zrobić endpoint API który to obsłuży\n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", // tu trzeba będzie zrobić endpoint API który to obsłuży\n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: \"Loading please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Welcome \", UserStore.userName, /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: \"Log out\",\n              disabled: false,\n              onClick: () => this.doLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: \"Log out\",\n              disabled: false,\n              onClick: () => this.doLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default _c = observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/PC/source/repos/LaboratoryApplication/LaboratoryServer/LaboratoryServer/client-app/src/App.js"],"names":["React","render","UserStore","LoginForm","SubmitButton","observer","App","Component","componentDidMount","res","fetch","method","headers","Accept","result","json","success","loading","isLoggedIn","userName","e","doLogout","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"@testing-library/react\";\nimport \"./App.css\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport { observer } from 'mobx-react';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\n        \"/isLoggedIn\", // tu trzeba będzie zrobić endpoint API który to obsłuży\n        {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\n        \"/logout\", // tu trzeba będzie zrobić endpoint API który to obsłuży\n        {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">Loading please wait</div>\n        </div>\n      );\n    }\n\n    else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStore.userName}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout}\n              ></SubmitButton>\n            </div>\n          </div>\n\n        )\n\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              <LoginForm />\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout}\n              ></SubmitButton>\n            </div>\n          </div>\n        );\n      }\n    }\n\n    return <div className=\"app\"></div>;\n  }\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}