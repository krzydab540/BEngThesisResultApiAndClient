{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\source\\\\repos\\\\LaboratoryApplication\\\\client-app\\\\src\\\\pages\\\\common\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { render } from \"@testing-library/react\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport { observer } from 'mobx-react';\nimport Home from './pages/common/Home';\nimport About from './pages/common/About';\nimport Contact from './pages/common/Contact';\n\nclass Login extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", // requires API endpoint\n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", // requires API endpoint \n      {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    // TODO: Change to React Router to change views\n    // TODO: Add validation to check if user is logged in => bearer token\n    if (UserStore.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: \"Loading please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Welcome \", UserStore.userName, /*#__PURE__*/_jsxDEV(SubmitButton, {\n              text: \"Log out\",\n              disabled: false,\n              onClick: () => this.doLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = observer(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/PC/source/repos/LaboratoryApplication/client-app/src/pages/common/Login.jsx"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","render","UserStore","LoginForm","SubmitButton","observer","Home","About","Contact","Login","componentDidMount","res","fetch","method","headers","Accept","result","json","success","loading","isLoggedIn","userName","e","doLogout","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { render } from \"@testing-library/react\";\r\nimport UserStore from \"./stores/UserStore\";\r\nimport LoginForm from \"./stores/LoginForm\";\r\nimport SubmitButton from \"./stores/SubmitButton\";\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Home from './pages/common/Home';\r\nimport About from './pages/common/About';\r\nimport Contact from './pages/common/Contact';\r\n\r\n\r\nclass Login extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await fetch(\r\n        \"/isLoggedIn\", // requires API endpoint\r\n        {\r\n          method: \"post\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.userName = result.userName;\r\n      } else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n    } catch (e) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  async doLogout() {\r\n    try {\r\n      let res = await fetch(\r\n        \"/logout\", // requires API endpoint \r\n        {\r\n          method: \"post\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.userName = \"\";\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {            \r\n    \r\n    // TODO: Change to React Router to change views\r\n    // TODO: Add validation to check if user is logged in => bearer token\r\n    if (UserStore.loading) {\r\n      return (\r\n        <div className=\"app\">\r\n          <div className=\"container\">Loading please wait</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else {\r\n      if (UserStore.isLoggedIn) {\r\n        return (\r\n          <div className=\"app\">\r\n            <div className=\"container\">\r\n              Welcome {UserStore.userName}\r\n              <SubmitButton\r\n                text={\"Log out\"}\r\n                disabled={false}\r\n                onClick={() => this.doLogout}\r\n              ></SubmitButton>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"container\">\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default observer(Login);\r\n"]},"metadata":{},"sourceType":"module"}