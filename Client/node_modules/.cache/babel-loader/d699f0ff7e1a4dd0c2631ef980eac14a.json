{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaitTask = exports.DOMWorld = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst LifecycleWatcher_js_1 = require(\"./LifecycleWatcher.js\");\n\nconst Errors_js_1 = require(\"./Errors.js\");\n\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\n\nconst environment_js_1 = require(\"../environment.js\");\n/**\n * @internal\n */\n\n\nclass DOMWorld {\n  constructor(frameManager, frame, timeoutSettings) {\n    this._documentPromise = null;\n    this._contextPromise = null;\n    this._contextResolveCallback = null;\n    this._detached = false;\n    /**\n     * @internal\n     */\n\n    this._waitTasks = new Set();\n    /**\n     * @internal\n     * Contains mapping from functions that should be bound to Puppeteer functions.\n     */\n\n    this._boundFunctions = new Map(); // Set of bindings that have been registered in the current context.\n\n    this._ctxBindings = new Set(); // If multiple waitFor are set up asynchronously, we need to wait for the\n    // first one to set up the binding in the page before running the others.\n\n    this._settingUpBinding = null;\n    this._frameManager = frameManager;\n    this._frame = frame;\n    this._timeoutSettings = timeoutSettings;\n\n    this._setContext(null);\n\n    frameManager._client.on('Runtime.bindingCalled', event => this._onBindingCalled(event));\n  }\n\n  frame() {\n    return this._frame;\n  }\n\n  async _setContext(context) {\n    if (context) {\n      this._contextResolveCallback.call(null, context);\n\n      this._contextResolveCallback = null;\n\n      for (const waitTask of this._waitTasks) waitTask.rerun();\n    } else {\n      this._documentPromise = null;\n      this._contextPromise = new Promise(fulfill => {\n        this._contextResolveCallback = fulfill;\n      });\n    }\n  }\n\n  _hasContext() {\n    return !this._contextResolveCallback;\n  }\n\n  _detach() {\n    this._detached = true;\n\n    for (const waitTask of this._waitTasks) waitTask.terminate(new Error('waitForFunction failed: frame got detached.'));\n  }\n\n  executionContext() {\n    if (this._detached) throw new Error(`Execution context is not available in detached frame \"${this._frame.url()}\" (are you trying to evaluate?)`);\n    return this._contextPromise;\n  }\n\n  async evaluateHandle(pageFunction, ...args) {\n    const context = await this.executionContext();\n    return context.evaluateHandle(pageFunction, ...args);\n  }\n\n  async evaluate(pageFunction, ...args) {\n    const context = await this.executionContext();\n    return context.evaluate(pageFunction, ...args);\n  }\n\n  async $(selector) {\n    const document = await this._document();\n    const value = await document.$(selector);\n    return value;\n  }\n\n  async _document() {\n    if (this._documentPromise) return this._documentPromise;\n    this._documentPromise = this.executionContext().then(async context => {\n      const document = await context.evaluateHandle('document');\n      return document.asElement();\n    });\n    return this._documentPromise;\n  }\n\n  async $x(expression) {\n    const document = await this._document();\n    const value = await document.$x(expression);\n    return value;\n  }\n\n  async $eval(selector, pageFunction, ...args) {\n    const document = await this._document();\n    return document.$eval(selector, pageFunction, ...args);\n  }\n\n  async $$eval(selector, pageFunction, ...args) {\n    const document = await this._document();\n    const value = await document.$$eval(selector, pageFunction, ...args);\n    return value;\n  }\n\n  async $$(selector) {\n    const document = await this._document();\n    const value = await document.$$(selector);\n    return value;\n  }\n\n  async content() {\n    return await this.evaluate(() => {\n      let retVal = '';\n      if (document.doctype) retVal = new XMLSerializer().serializeToString(document.doctype);\n      if (document.documentElement) retVal += document.documentElement.outerHTML;\n      return retVal;\n    });\n  }\n\n  async setContent(html, options = {}) {\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options; // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n    // lifecycle event. @see https://crrev.com/608658\n\n    await this.evaluate(html => {\n      document.open();\n      document.write(html);\n      document.close();\n    }, html);\n    const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this._frameManager, this._frame, waitUntil, timeout);\n    const error = await Promise.race([watcher.timeoutOrTerminationPromise(), watcher.lifecyclePromise()]);\n    watcher.dispose();\n    if (error) throw error;\n  }\n  /**\n   * Adds a script tag into the current context.\n   *\n   * @remarks\n   *\n   * You can pass a URL, filepath or string of contents. Note that when running Puppeteer\n   * in a browser environment you cannot pass a filepath and should use either\n   * `url` or `content`.\n   */\n\n\n  async addScriptTag(options) {\n    const {\n      url = null,\n      path = null,\n      content = null,\n      type = ''\n    } = options;\n\n    if (url !== null) {\n      try {\n        const context = await this.executionContext();\n        return (await context.evaluateHandle(addScriptUrl, url, type)).asElement();\n      } catch (error) {\n        throw new Error(`Loading script from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      if (!environment_js_1.isNode) {\n        throw new Error('Cannot pass a filepath to addScriptTag in the browser environment.');\n      }\n\n      const fs = await helper_js_1.helper.importFSModule();\n      let contents = await fs.promises.readFile(path, 'utf8');\n      contents += '//# sourceURL=' + path.replace(/\\n/g, '');\n      const context = await this.executionContext();\n      return (await context.evaluateHandle(addScriptContent, contents, type)).asElement();\n    }\n\n    if (content !== null) {\n      const context = await this.executionContext();\n      return (await context.evaluateHandle(addScriptContent, content, type)).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    async function addScriptUrl(url, type) {\n      const script = document.createElement('script');\n      script.src = url;\n      if (type) script.type = type;\n      const promise = new Promise((res, rej) => {\n        script.onload = res;\n        script.onerror = rej;\n      });\n      document.head.appendChild(script);\n      await promise;\n      return script;\n    }\n\n    function addScriptContent(content, type = 'text/javascript') {\n      const script = document.createElement('script');\n      script.type = type;\n      script.text = content;\n      let error = null;\n\n      script.onerror = e => error = e;\n\n      document.head.appendChild(script);\n      if (error) throw error;\n      return script;\n    }\n  }\n  /**\n   * Adds a style tag into the current context.\n   *\n   * @remarks\n   *\n   * You can pass a URL, filepath or string of contents. Note that when running Puppeteer\n   * in a browser environment you cannot pass a filepath and should use either\n   * `url` or `content`.\n   *\n   */\n\n\n  async addStyleTag(options) {\n    const {\n      url = null,\n      path = null,\n      content = null\n    } = options;\n\n    if (url !== null) {\n      try {\n        const context = await this.executionContext();\n        return (await context.evaluateHandle(addStyleUrl, url)).asElement();\n      } catch (error) {\n        throw new Error(`Loading style from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      if (!environment_js_1.isNode) {\n        throw new Error('Cannot pass a filepath to addStyleTag in the browser environment.');\n      }\n\n      const fs = await helper_js_1.helper.importFSModule();\n      let contents = await fs.promises.readFile(path, 'utf8');\n      contents += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      const context = await this.executionContext();\n      return (await context.evaluateHandle(addStyleContent, contents)).asElement();\n    }\n\n    if (content !== null) {\n      const context = await this.executionContext();\n      return (await context.evaluateHandle(addStyleContent, content)).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    async function addStyleUrl(url) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = url;\n      const promise = new Promise((res, rej) => {\n        link.onload = res;\n        link.onerror = rej;\n      });\n      document.head.appendChild(link);\n      await promise;\n      return link;\n    }\n\n    async function addStyleContent(content) {\n      const style = document.createElement('style');\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(content));\n      const promise = new Promise((res, rej) => {\n        style.onload = res;\n        style.onerror = rej;\n      });\n      document.head.appendChild(style);\n      await promise;\n      return style;\n    }\n  }\n\n  async click(selector, options) {\n    const handle = await this.$(selector);\n    assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n    await handle.click(options);\n    await handle.dispose();\n  }\n\n  async focus(selector) {\n    const handle = await this.$(selector);\n    assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n    await handle.focus();\n    await handle.dispose();\n  }\n\n  async hover(selector) {\n    const handle = await this.$(selector);\n    assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n    await handle.hover();\n    await handle.dispose();\n  }\n\n  async select(selector, ...values) {\n    const handle = await this.$(selector);\n    assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n    const result = await handle.select(...values);\n    await handle.dispose();\n    return result;\n  }\n\n  async tap(selector) {\n    const handle = await this.$(selector);\n    await handle.tap();\n    await handle.dispose();\n  }\n\n  async type(selector, text, options) {\n    const handle = await this.$(selector);\n    assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n    await handle.type(text, options);\n    await handle.dispose();\n  }\n\n  async waitForSelector(selector, options) {\n    const {\n      updatedSelector,\n      queryHandler\n    } = QueryHandler_js_1.getQueryHandlerAndSelector(selector);\n    return queryHandler.waitFor(this, updatedSelector, options);\n  }\n  /**\n   * @internal\n   */\n\n\n  async addBindingToContext(context, name) {\n    // Previous operation added the binding so we are done.\n    if (this._ctxBindings.has(DOMWorld.bindingIdentifier(name, context._contextId))) {\n      return;\n    } // Wait for other operation to finish\n\n\n    if (this._settingUpBinding) {\n      await this._settingUpBinding;\n      return this.addBindingToContext(context, name);\n    }\n\n    const bind = async name => {\n      const expression = helper_js_1.helper.pageBindingInitString('internal', name);\n\n      try {\n        await context._client.send('Runtime.addBinding', {\n          name,\n          executionContextId: context._contextId\n        });\n        await context.evaluate(expression);\n      } catch (error) {\n        // We could have tried to evaluate in a context which was already\n        // destroyed. This happens, for example, if the page is navigated while\n        // we are trying to add the binding\n        const ctxDestroyed = error.message.includes('Execution context was destroyed');\n        const ctxNotFound = error.message.includes('Cannot find context with specified id');\n\n        if (ctxDestroyed || ctxNotFound) {\n          return;\n        } else {\n          helper_js_1.debugError(error);\n          return;\n        }\n      }\n\n      this._ctxBindings.add(DOMWorld.bindingIdentifier(name, context._contextId));\n    };\n\n    this._settingUpBinding = bind(name);\n    await this._settingUpBinding;\n    this._settingUpBinding = null;\n  }\n\n  async _onBindingCalled(event) {\n    let payload;\n    if (!this._hasContext()) return;\n    const context = await this.executionContext();\n\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n\n    const {\n      type,\n      name,\n      seq,\n      args\n    } = payload;\n    if (type !== 'internal' || !this._ctxBindings.has(DOMWorld.bindingIdentifier(name, context._contextId))) return;\n    if (context._contextId !== event.executionContextId) return;\n\n    try {\n      const result = await this._boundFunctions.get(name)(...args);\n      await context.evaluate(deliverResult, name, seq, result);\n    } catch (error) {\n      // The WaitTask may already have been resolved by timing out, or the\n      // exection context may have been destroyed.\n      // In both caes, the promises above are rejected with a protocol error.\n      // We can safely ignores these, as the WaitTask is re-installed in\n      // the next execution context if needed.\n      if (error.message.includes('Protocol error')) return;\n      helper_js_1.debugError(error);\n    }\n\n    function deliverResult(name, seq, result) {\n      globalThis[name].callbacks.get(seq).resolve(result);\n      globalThis[name].callbacks.delete(seq);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  async waitForSelectorInPage(queryOne, selector, options, binding) {\n    const {\n      visible: waitForVisible = false,\n      hidden: waitForHidden = false,\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n    const title = `selector \\`${selector}\\`${waitForHidden ? ' to be hidden' : ''}`;\n\n    async function predicate(selector, waitForVisible, waitForHidden) {\n      const node = predicateQueryHandler ? await predicateQueryHandler(document, selector) : document.querySelector(selector);\n      return checkWaitForOptions(node, waitForVisible, waitForHidden);\n    }\n\n    const waitTaskOptions = {\n      domWorld: this,\n      predicateBody: helper_js_1.helper.makePredicateString(predicate, queryOne),\n      title,\n      polling,\n      timeout,\n      args: [selector, waitForVisible, waitForHidden],\n      binding\n    };\n    const waitTask = new WaitTask(waitTaskOptions);\n    const jsHandle = await waitTask.promise;\n    const elementHandle = jsHandle.asElement();\n\n    if (!elementHandle) {\n      await jsHandle.dispose();\n      return null;\n    }\n\n    return elementHandle;\n  }\n\n  async waitForXPath(xpath, options) {\n    const {\n      visible: waitForVisible = false,\n      hidden: waitForHidden = false,\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n    const title = `XPath \\`${xpath}\\`${waitForHidden ? ' to be hidden' : ''}`;\n\n    function predicate(xpath, waitForVisible, waitForHidden) {\n      const node = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n      return checkWaitForOptions(node, waitForVisible, waitForHidden);\n    }\n\n    const waitTaskOptions = {\n      domWorld: this,\n      predicateBody: helper_js_1.helper.makePredicateString(predicate),\n      title,\n      polling,\n      timeout,\n      args: [xpath, waitForVisible, waitForHidden]\n    };\n    const waitTask = new WaitTask(waitTaskOptions);\n    const jsHandle = await waitTask.promise;\n    const elementHandle = jsHandle.asElement();\n\n    if (!elementHandle) {\n      await jsHandle.dispose();\n      return null;\n    }\n\n    return elementHandle;\n  }\n\n  waitForFunction(pageFunction, options = {}, ...args) {\n    const {\n      polling = 'raf',\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    const waitTaskOptions = {\n      domWorld: this,\n      predicateBody: pageFunction,\n      title: 'function',\n      polling,\n      timeout,\n      args\n    };\n    const waitTask = new WaitTask(waitTaskOptions);\n    return waitTask.promise;\n  }\n\n  async title() {\n    return this.evaluate(() => document.title);\n  }\n\n}\n\nexports.DOMWorld = DOMWorld;\n\nDOMWorld.bindingIdentifier = (name, contextId) => `${name}_${contextId}`;\n/**\n * @internal\n */\n\n\nclass WaitTask {\n  constructor(options) {\n    this._runCount = 0;\n    this._terminated = false;\n    if (helper_js_1.helper.isString(options.polling)) assert_js_1.assert(options.polling === 'raf' || options.polling === 'mutation', 'Unknown polling option: ' + options.polling);else if (helper_js_1.helper.isNumber(options.polling)) assert_js_1.assert(options.polling > 0, 'Cannot poll with non-positive interval: ' + options.polling);else throw new Error('Unknown polling options: ' + options.polling);\n\n    function getPredicateBody(predicateBody) {\n      if (helper_js_1.helper.isString(predicateBody)) return `return (${predicateBody});`;\n      return `return (${predicateBody})(...args);`;\n    }\n\n    this._domWorld = options.domWorld;\n    this._polling = options.polling;\n    this._timeout = options.timeout;\n    this._predicateBody = getPredicateBody(options.predicateBody);\n    this._args = options.args;\n    this._binding = options.binding;\n    this._runCount = 0;\n\n    this._domWorld._waitTasks.add(this);\n\n    if (this._binding) {\n      this._domWorld._boundFunctions.set(this._binding.name, this._binding.pptrFunction);\n    }\n\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    }); // Since page navigation requires us to re-install the pageScript, we should track\n    // timeout on our end.\n\n    if (options.timeout) {\n      const timeoutError = new Errors_js_1.TimeoutError(`waiting for ${options.title} failed: timeout ${options.timeout}ms exceeded`);\n      this._timeoutTimer = setTimeout(() => this.terminate(timeoutError), options.timeout);\n    }\n\n    this.rerun();\n  }\n\n  terminate(error) {\n    this._terminated = true;\n\n    this._reject(error);\n\n    this._cleanup();\n  }\n\n  async rerun() {\n    const runCount = ++this._runCount;\n    let success = null;\n    let error = null;\n    const context = await this._domWorld.executionContext();\n    if (this._terminated || runCount !== this._runCount) return;\n\n    if (this._binding) {\n      await this._domWorld.addBindingToContext(context, this._binding.name);\n    }\n\n    if (this._terminated || runCount !== this._runCount) return;\n\n    try {\n      success = await context.evaluateHandle(waitForPredicatePageFunction, this._predicateBody, this._polling, this._timeout, ...this._args);\n    } catch (error_) {\n      error = error_;\n    }\n\n    if (this._terminated || runCount !== this._runCount) {\n      if (success) await success.dispose();\n      return;\n    } // Ignore timeouts in pageScript - we track timeouts ourselves.\n    // If the frame's execution context has already changed, `frame.evaluate` will\n    // throw an error - ignore this predicate run altogether.\n\n\n    if (!error && (await this._domWorld.evaluate(s => !s, success).catch(() => true))) {\n      await success.dispose();\n      return;\n    }\n\n    if (error) {\n      if (error.message.includes('TypeError: binding is not a function')) {\n        return this.rerun();\n      } // When frame is detached the task should have been terminated by the DOMWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n\n\n      if (error.message.includes('Execution context is not available in detached frame')) {\n        this.terminate(new Error('waitForFunction failed: frame got detached.'));\n        return;\n      } // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n\n\n      if (error.message.includes('Execution context was destroyed')) return; // We could have tried to evaluate in a context which was already\n      // destroyed.\n\n      if (error.message.includes('Cannot find context with specified id')) return;\n\n      this._reject(error);\n    } else {\n      this._resolve(success);\n    }\n\n    this._cleanup();\n  }\n\n  _cleanup() {\n    clearTimeout(this._timeoutTimer);\n\n    this._domWorld._waitTasks.delete(this);\n  }\n\n}\n\nexports.WaitTask = WaitTask;\n\nasync function waitForPredicatePageFunction(predicateBody, polling, timeout, ...args) {\n  const predicate = new Function('...args', predicateBody);\n  let timedOut = false;\n  if (timeout) setTimeout(() => timedOut = true, timeout);\n  if (polling === 'raf') return await pollRaf();\n  if (polling === 'mutation') return await pollMutation();\n  if (typeof polling === 'number') return await pollInterval(polling);\n  /**\n   * @returns {!Promise<*>}\n   */\n\n  async function pollMutation() {\n    const success = await predicate(...args);\n    if (success) return Promise.resolve(success);\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    const observer = new MutationObserver(async () => {\n      if (timedOut) {\n        observer.disconnect();\n        fulfill();\n      }\n\n      const success = await predicate(...args);\n\n      if (success) {\n        observer.disconnect();\n        fulfill(success);\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return result;\n  }\n\n  async function pollRaf() {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    await onRaf();\n    return result;\n\n    async function onRaf() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n\n      const success = await predicate(...args);\n      if (success) fulfill(success);else requestAnimationFrame(onRaf);\n    }\n  }\n\n  async function pollInterval(pollInterval) {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    await onTimeout();\n    return result;\n\n    async function onTimeout() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n\n      const success = await predicate(...args);\n      if (success) fulfill(success);else setTimeout(onTimeout, pollInterval);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/source/repos/LaboratoryApplication/client-app/node_modules/puppeteer/lib/cjs/puppeteer/common/DOMWorld.js"],"names":["Object","defineProperty","exports","value","WaitTask","DOMWorld","assert_js_1","require","helper_js_1","LifecycleWatcher_js_1","Errors_js_1","QueryHandler_js_1","environment_js_1","constructor","frameManager","frame","timeoutSettings","_documentPromise","_contextPromise","_contextResolveCallback","_detached","_waitTasks","Set","_boundFunctions","Map","_ctxBindings","_settingUpBinding","_frameManager","_frame","_timeoutSettings","_setContext","_client","on","event","_onBindingCalled","context","call","waitTask","rerun","Promise","fulfill","_hasContext","_detach","terminate","Error","executionContext","url","evaluateHandle","pageFunction","args","evaluate","$","selector","document","_document","then","asElement","$x","expression","$eval","$$eval","$$","content","retVal","doctype","XMLSerializer","serializeToString","documentElement","outerHTML","setContent","html","options","waitUntil","timeout","navigationTimeout","open","write","close","watcher","LifecycleWatcher","error","race","timeoutOrTerminationPromise","lifecyclePromise","dispose","addScriptTag","path","type","addScriptUrl","isNode","fs","helper","importFSModule","contents","promises","readFile","replace","addScriptContent","script","createElement","src","promise","res","rej","onload","onerror","head","appendChild","text","e","addStyleTag","addStyleUrl","addStyleContent","link","rel","href","style","createTextNode","click","handle","assert","focus","hover","select","values","result","tap","waitForSelector","updatedSelector","queryHandler","getQueryHandlerAndSelector","waitFor","addBindingToContext","name","has","bindingIdentifier","_contextId","bind","pageBindingInitString","send","executionContextId","ctxDestroyed","message","includes","ctxNotFound","debugError","add","payload","JSON","parse","seq","get","deliverResult","globalThis","callbacks","resolve","delete","waitForSelectorInPage","queryOne","binding","visible","waitForVisible","hidden","waitForHidden","polling","title","predicate","node","predicateQueryHandler","querySelector","checkWaitForOptions","waitTaskOptions","domWorld","predicateBody","makePredicateString","jsHandle","elementHandle","waitForXPath","xpath","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","waitForFunction","contextId","_runCount","_terminated","isString","isNumber","getPredicateBody","_domWorld","_polling","_timeout","_predicateBody","_args","_binding","set","pptrFunction","reject","_resolve","_reject","timeoutError","TimeoutError","_timeoutTimer","setTimeout","_cleanup","runCount","success","waitForPredicatePageFunction","error_","s","catch","clearTimeout","Function","timedOut","pollRaf","pollMutation","pollInterval","x","observer","MutationObserver","disconnect","observe","childList","subtree","attributes","onRaf","requestAnimationFrame","onTimeout"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WaitTask = exports.DOMWorld = void 0;\nconst assert_js_1 = require(\"./assert.js\");\nconst helper_js_1 = require(\"./helper.js\");\nconst LifecycleWatcher_js_1 = require(\"./LifecycleWatcher.js\");\nconst Errors_js_1 = require(\"./Errors.js\");\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\nconst environment_js_1 = require(\"../environment.js\");\n/**\n * @internal\n */\nclass DOMWorld {\n    constructor(frameManager, frame, timeoutSettings) {\n        this._documentPromise = null;\n        this._contextPromise = null;\n        this._contextResolveCallback = null;\n        this._detached = false;\n        /**\n         * @internal\n         */\n        this._waitTasks = new Set();\n        /**\n         * @internal\n         * Contains mapping from functions that should be bound to Puppeteer functions.\n         */\n        this._boundFunctions = new Map();\n        // Set of bindings that have been registered in the current context.\n        this._ctxBindings = new Set();\n        // If multiple waitFor are set up asynchronously, we need to wait for the\n        // first one to set up the binding in the page before running the others.\n        this._settingUpBinding = null;\n        this._frameManager = frameManager;\n        this._frame = frame;\n        this._timeoutSettings = timeoutSettings;\n        this._setContext(null);\n        frameManager._client.on('Runtime.bindingCalled', (event) => this._onBindingCalled(event));\n    }\n    frame() {\n        return this._frame;\n    }\n    async _setContext(context) {\n        if (context) {\n            this._contextResolveCallback.call(null, context);\n            this._contextResolveCallback = null;\n            for (const waitTask of this._waitTasks)\n                waitTask.rerun();\n        }\n        else {\n            this._documentPromise = null;\n            this._contextPromise = new Promise((fulfill) => {\n                this._contextResolveCallback = fulfill;\n            });\n        }\n    }\n    _hasContext() {\n        return !this._contextResolveCallback;\n    }\n    _detach() {\n        this._detached = true;\n        for (const waitTask of this._waitTasks)\n            waitTask.terminate(new Error('waitForFunction failed: frame got detached.'));\n    }\n    executionContext() {\n        if (this._detached)\n            throw new Error(`Execution context is not available in detached frame \"${this._frame.url()}\" (are you trying to evaluate?)`);\n        return this._contextPromise;\n    }\n    async evaluateHandle(pageFunction, ...args) {\n        const context = await this.executionContext();\n        return context.evaluateHandle(pageFunction, ...args);\n    }\n    async evaluate(pageFunction, ...args) {\n        const context = await this.executionContext();\n        return context.evaluate(pageFunction, ...args);\n    }\n    async $(selector) {\n        const document = await this._document();\n        const value = await document.$(selector);\n        return value;\n    }\n    async _document() {\n        if (this._documentPromise)\n            return this._documentPromise;\n        this._documentPromise = this.executionContext().then(async (context) => {\n            const document = await context.evaluateHandle('document');\n            return document.asElement();\n        });\n        return this._documentPromise;\n    }\n    async $x(expression) {\n        const document = await this._document();\n        const value = await document.$x(expression);\n        return value;\n    }\n    async $eval(selector, pageFunction, ...args) {\n        const document = await this._document();\n        return document.$eval(selector, pageFunction, ...args);\n    }\n    async $$eval(selector, pageFunction, ...args) {\n        const document = await this._document();\n        const value = await document.$$eval(selector, pageFunction, ...args);\n        return value;\n    }\n    async $$(selector) {\n        const document = await this._document();\n        const value = await document.$$(selector);\n        return value;\n    }\n    async content() {\n        return await this.evaluate(() => {\n            let retVal = '';\n            if (document.doctype)\n                retVal = new XMLSerializer().serializeToString(document.doctype);\n            if (document.documentElement)\n                retVal += document.documentElement.outerHTML;\n            return retVal;\n        });\n    }\n    async setContent(html, options = {}) {\n        const { waitUntil = ['load'], timeout = this._timeoutSettings.navigationTimeout(), } = options;\n        // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n        // lifecycle event. @see https://crrev.com/608658\n        await this.evaluate((html) => {\n            document.open();\n            document.write(html);\n            document.close();\n        }, html);\n        const watcher = new LifecycleWatcher_js_1.LifecycleWatcher(this._frameManager, this._frame, waitUntil, timeout);\n        const error = await Promise.race([\n            watcher.timeoutOrTerminationPromise(),\n            watcher.lifecyclePromise(),\n        ]);\n        watcher.dispose();\n        if (error)\n            throw error;\n    }\n    /**\n     * Adds a script tag into the current context.\n     *\n     * @remarks\n     *\n     * You can pass a URL, filepath or string of contents. Note that when running Puppeteer\n     * in a browser environment you cannot pass a filepath and should use either\n     * `url` or `content`.\n     */\n    async addScriptTag(options) {\n        const { url = null, path = null, content = null, type = '' } = options;\n        if (url !== null) {\n            try {\n                const context = await this.executionContext();\n                return (await context.evaluateHandle(addScriptUrl, url, type)).asElement();\n            }\n            catch (error) {\n                throw new Error(`Loading script from ${url} failed`);\n            }\n        }\n        if (path !== null) {\n            if (!environment_js_1.isNode) {\n                throw new Error('Cannot pass a filepath to addScriptTag in the browser environment.');\n            }\n            const fs = await helper_js_1.helper.importFSModule();\n            let contents = await fs.promises.readFile(path, 'utf8');\n            contents += '//# sourceURL=' + path.replace(/\\n/g, '');\n            const context = await this.executionContext();\n            return (await context.evaluateHandle(addScriptContent, contents, type)).asElement();\n        }\n        if (content !== null) {\n            const context = await this.executionContext();\n            return (await context.evaluateHandle(addScriptContent, content, type)).asElement();\n        }\n        throw new Error('Provide an object with a `url`, `path` or `content` property');\n        async function addScriptUrl(url, type) {\n            const script = document.createElement('script');\n            script.src = url;\n            if (type)\n                script.type = type;\n            const promise = new Promise((res, rej) => {\n                script.onload = res;\n                script.onerror = rej;\n            });\n            document.head.appendChild(script);\n            await promise;\n            return script;\n        }\n        function addScriptContent(content, type = 'text/javascript') {\n            const script = document.createElement('script');\n            script.type = type;\n            script.text = content;\n            let error = null;\n            script.onerror = (e) => (error = e);\n            document.head.appendChild(script);\n            if (error)\n                throw error;\n            return script;\n        }\n    }\n    /**\n     * Adds a style tag into the current context.\n     *\n     * @remarks\n     *\n     * You can pass a URL, filepath or string of contents. Note that when running Puppeteer\n     * in a browser environment you cannot pass a filepath and should use either\n     * `url` or `content`.\n     *\n     */\n    async addStyleTag(options) {\n        const { url = null, path = null, content = null } = options;\n        if (url !== null) {\n            try {\n                const context = await this.executionContext();\n                return (await context.evaluateHandle(addStyleUrl, url)).asElement();\n            }\n            catch (error) {\n                throw new Error(`Loading style from ${url} failed`);\n            }\n        }\n        if (path !== null) {\n            if (!environment_js_1.isNode) {\n                throw new Error('Cannot pass a filepath to addStyleTag in the browser environment.');\n            }\n            const fs = await helper_js_1.helper.importFSModule();\n            let contents = await fs.promises.readFile(path, 'utf8');\n            contents += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n            const context = await this.executionContext();\n            return (await context.evaluateHandle(addStyleContent, contents)).asElement();\n        }\n        if (content !== null) {\n            const context = await this.executionContext();\n            return (await context.evaluateHandle(addStyleContent, content)).asElement();\n        }\n        throw new Error('Provide an object with a `url`, `path` or `content` property');\n        async function addStyleUrl(url) {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = url;\n            const promise = new Promise((res, rej) => {\n                link.onload = res;\n                link.onerror = rej;\n            });\n            document.head.appendChild(link);\n            await promise;\n            return link;\n        }\n        async function addStyleContent(content) {\n            const style = document.createElement('style');\n            style.type = 'text/css';\n            style.appendChild(document.createTextNode(content));\n            const promise = new Promise((res, rej) => {\n                style.onload = res;\n                style.onerror = rej;\n            });\n            document.head.appendChild(style);\n            await promise;\n            return style;\n        }\n    }\n    async click(selector, options) {\n        const handle = await this.$(selector);\n        assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n        await handle.click(options);\n        await handle.dispose();\n    }\n    async focus(selector) {\n        const handle = await this.$(selector);\n        assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n        await handle.focus();\n        await handle.dispose();\n    }\n    async hover(selector) {\n        const handle = await this.$(selector);\n        assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n        await handle.hover();\n        await handle.dispose();\n    }\n    async select(selector, ...values) {\n        const handle = await this.$(selector);\n        assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n        const result = await handle.select(...values);\n        await handle.dispose();\n        return result;\n    }\n    async tap(selector) {\n        const handle = await this.$(selector);\n        await handle.tap();\n        await handle.dispose();\n    }\n    async type(selector, text, options) {\n        const handle = await this.$(selector);\n        assert_js_1.assert(handle, 'No node found for selector: ' + selector);\n        await handle.type(text, options);\n        await handle.dispose();\n    }\n    async waitForSelector(selector, options) {\n        const { updatedSelector, queryHandler } = QueryHandler_js_1.getQueryHandlerAndSelector(selector);\n        return queryHandler.waitFor(this, updatedSelector, options);\n    }\n    /**\n     * @internal\n     */\n    async addBindingToContext(context, name) {\n        // Previous operation added the binding so we are done.\n        if (this._ctxBindings.has(DOMWorld.bindingIdentifier(name, context._contextId))) {\n            return;\n        }\n        // Wait for other operation to finish\n        if (this._settingUpBinding) {\n            await this._settingUpBinding;\n            return this.addBindingToContext(context, name);\n        }\n        const bind = async (name) => {\n            const expression = helper_js_1.helper.pageBindingInitString('internal', name);\n            try {\n                await context._client.send('Runtime.addBinding', {\n                    name,\n                    executionContextId: context._contextId,\n                });\n                await context.evaluate(expression);\n            }\n            catch (error) {\n                // We could have tried to evaluate in a context which was already\n                // destroyed. This happens, for example, if the page is navigated while\n                // we are trying to add the binding\n                const ctxDestroyed = error.message.includes('Execution context was destroyed');\n                const ctxNotFound = error.message.includes('Cannot find context with specified id');\n                if (ctxDestroyed || ctxNotFound) {\n                    return;\n                }\n                else {\n                    helper_js_1.debugError(error);\n                    return;\n                }\n            }\n            this._ctxBindings.add(DOMWorld.bindingIdentifier(name, context._contextId));\n        };\n        this._settingUpBinding = bind(name);\n        await this._settingUpBinding;\n        this._settingUpBinding = null;\n    }\n    async _onBindingCalled(event) {\n        let payload;\n        if (!this._hasContext())\n            return;\n        const context = await this.executionContext();\n        try {\n            payload = JSON.parse(event.payload);\n        }\n        catch {\n            // The binding was either called by something in the page or it was\n            // called before our wrapper was initialized.\n            return;\n        }\n        const { type, name, seq, args } = payload;\n        if (type !== 'internal' ||\n            !this._ctxBindings.has(DOMWorld.bindingIdentifier(name, context._contextId)))\n            return;\n        if (context._contextId !== event.executionContextId)\n            return;\n        try {\n            const result = await this._boundFunctions.get(name)(...args);\n            await context.evaluate(deliverResult, name, seq, result);\n        }\n        catch (error) {\n            // The WaitTask may already have been resolved by timing out, or the\n            // exection context may have been destroyed.\n            // In both caes, the promises above are rejected with a protocol error.\n            // We can safely ignores these, as the WaitTask is re-installed in\n            // the next execution context if needed.\n            if (error.message.includes('Protocol error'))\n                return;\n            helper_js_1.debugError(error);\n        }\n        function deliverResult(name, seq, result) {\n            globalThis[name].callbacks.get(seq).resolve(result);\n            globalThis[name].callbacks.delete(seq);\n        }\n    }\n    /**\n     * @internal\n     */\n    async waitForSelectorInPage(queryOne, selector, options, binding) {\n        const { visible: waitForVisible = false, hidden: waitForHidden = false, timeout = this._timeoutSettings.timeout(), } = options;\n        const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n        const title = `selector \\`${selector}\\`${waitForHidden ? ' to be hidden' : ''}`;\n        async function predicate(selector, waitForVisible, waitForHidden) {\n            const node = predicateQueryHandler\n                ? (await predicateQueryHandler(document, selector))\n                : document.querySelector(selector);\n            return checkWaitForOptions(node, waitForVisible, waitForHidden);\n        }\n        const waitTaskOptions = {\n            domWorld: this,\n            predicateBody: helper_js_1.helper.makePredicateString(predicate, queryOne),\n            title,\n            polling,\n            timeout,\n            args: [selector, waitForVisible, waitForHidden],\n            binding,\n        };\n        const waitTask = new WaitTask(waitTaskOptions);\n        const jsHandle = await waitTask.promise;\n        const elementHandle = jsHandle.asElement();\n        if (!elementHandle) {\n            await jsHandle.dispose();\n            return null;\n        }\n        return elementHandle;\n    }\n    async waitForXPath(xpath, options) {\n        const { visible: waitForVisible = false, hidden: waitForHidden = false, timeout = this._timeoutSettings.timeout(), } = options;\n        const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n        const title = `XPath \\`${xpath}\\`${waitForHidden ? ' to be hidden' : ''}`;\n        function predicate(xpath, waitForVisible, waitForHidden) {\n            const node = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n            return checkWaitForOptions(node, waitForVisible, waitForHidden);\n        }\n        const waitTaskOptions = {\n            domWorld: this,\n            predicateBody: helper_js_1.helper.makePredicateString(predicate),\n            title,\n            polling,\n            timeout,\n            args: [xpath, waitForVisible, waitForHidden],\n        };\n        const waitTask = new WaitTask(waitTaskOptions);\n        const jsHandle = await waitTask.promise;\n        const elementHandle = jsHandle.asElement();\n        if (!elementHandle) {\n            await jsHandle.dispose();\n            return null;\n        }\n        return elementHandle;\n    }\n    waitForFunction(pageFunction, options = {}, ...args) {\n        const { polling = 'raf', timeout = this._timeoutSettings.timeout(), } = options;\n        const waitTaskOptions = {\n            domWorld: this,\n            predicateBody: pageFunction,\n            title: 'function',\n            polling,\n            timeout,\n            args,\n        };\n        const waitTask = new WaitTask(waitTaskOptions);\n        return waitTask.promise;\n    }\n    async title() {\n        return this.evaluate(() => document.title);\n    }\n}\nexports.DOMWorld = DOMWorld;\nDOMWorld.bindingIdentifier = (name, contextId) => `${name}_${contextId}`;\n/**\n * @internal\n */\nclass WaitTask {\n    constructor(options) {\n        this._runCount = 0;\n        this._terminated = false;\n        if (helper_js_1.helper.isString(options.polling))\n            assert_js_1.assert(options.polling === 'raf' || options.polling === 'mutation', 'Unknown polling option: ' + options.polling);\n        else if (helper_js_1.helper.isNumber(options.polling))\n            assert_js_1.assert(options.polling > 0, 'Cannot poll with non-positive interval: ' + options.polling);\n        else\n            throw new Error('Unknown polling options: ' + options.polling);\n        function getPredicateBody(predicateBody) {\n            if (helper_js_1.helper.isString(predicateBody))\n                return `return (${predicateBody});`;\n            return `return (${predicateBody})(...args);`;\n        }\n        this._domWorld = options.domWorld;\n        this._polling = options.polling;\n        this._timeout = options.timeout;\n        this._predicateBody = getPredicateBody(options.predicateBody);\n        this._args = options.args;\n        this._binding = options.binding;\n        this._runCount = 0;\n        this._domWorld._waitTasks.add(this);\n        if (this._binding) {\n            this._domWorld._boundFunctions.set(this._binding.name, this._binding.pptrFunction);\n        }\n        this.promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        // Since page navigation requires us to re-install the pageScript, we should track\n        // timeout on our end.\n        if (options.timeout) {\n            const timeoutError = new Errors_js_1.TimeoutError(`waiting for ${options.title} failed: timeout ${options.timeout}ms exceeded`);\n            this._timeoutTimer = setTimeout(() => this.terminate(timeoutError), options.timeout);\n        }\n        this.rerun();\n    }\n    terminate(error) {\n        this._terminated = true;\n        this._reject(error);\n        this._cleanup();\n    }\n    async rerun() {\n        const runCount = ++this._runCount;\n        let success = null;\n        let error = null;\n        const context = await this._domWorld.executionContext();\n        if (this._terminated || runCount !== this._runCount)\n            return;\n        if (this._binding) {\n            await this._domWorld.addBindingToContext(context, this._binding.name);\n        }\n        if (this._terminated || runCount !== this._runCount)\n            return;\n        try {\n            success = await context.evaluateHandle(waitForPredicatePageFunction, this._predicateBody, this._polling, this._timeout, ...this._args);\n        }\n        catch (error_) {\n            error = error_;\n        }\n        if (this._terminated || runCount !== this._runCount) {\n            if (success)\n                await success.dispose();\n            return;\n        }\n        // Ignore timeouts in pageScript - we track timeouts ourselves.\n        // If the frame's execution context has already changed, `frame.evaluate` will\n        // throw an error - ignore this predicate run altogether.\n        if (!error &&\n            (await this._domWorld.evaluate((s) => !s, success).catch(() => true))) {\n            await success.dispose();\n            return;\n        }\n        if (error) {\n            if (error.message.includes('TypeError: binding is not a function')) {\n                return this.rerun();\n            }\n            // When frame is detached the task should have been terminated by the DOMWorld.\n            // This can fail if we were adding this task while the frame was detached,\n            // so we terminate here instead.\n            if (error.message.includes('Execution context is not available in detached frame')) {\n                this.terminate(new Error('waitForFunction failed: frame got detached.'));\n                return;\n            }\n            // When the page is navigated, the promise is rejected.\n            // We will try again in the new execution context.\n            if (error.message.includes('Execution context was destroyed'))\n                return;\n            // We could have tried to evaluate in a context which was already\n            // destroyed.\n            if (error.message.includes('Cannot find context with specified id'))\n                return;\n            this._reject(error);\n        }\n        else {\n            this._resolve(success);\n        }\n        this._cleanup();\n    }\n    _cleanup() {\n        clearTimeout(this._timeoutTimer);\n        this._domWorld._waitTasks.delete(this);\n    }\n}\nexports.WaitTask = WaitTask;\nasync function waitForPredicatePageFunction(predicateBody, polling, timeout, ...args) {\n    const predicate = new Function('...args', predicateBody);\n    let timedOut = false;\n    if (timeout)\n        setTimeout(() => (timedOut = true), timeout);\n    if (polling === 'raf')\n        return await pollRaf();\n    if (polling === 'mutation')\n        return await pollMutation();\n    if (typeof polling === 'number')\n        return await pollInterval(polling);\n    /**\n     * @returns {!Promise<*>}\n     */\n    async function pollMutation() {\n        const success = await predicate(...args);\n        if (success)\n            return Promise.resolve(success);\n        let fulfill;\n        const result = new Promise((x) => (fulfill = x));\n        const observer = new MutationObserver(async () => {\n            if (timedOut) {\n                observer.disconnect();\n                fulfill();\n            }\n            const success = await predicate(...args);\n            if (success) {\n                observer.disconnect();\n                fulfill(success);\n            }\n        });\n        observer.observe(document, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n        });\n        return result;\n    }\n    async function pollRaf() {\n        let fulfill;\n        const result = new Promise((x) => (fulfill = x));\n        await onRaf();\n        return result;\n        async function onRaf() {\n            if (timedOut) {\n                fulfill();\n                return;\n            }\n            const success = await predicate(...args);\n            if (success)\n                fulfill(success);\n            else\n                requestAnimationFrame(onRaf);\n        }\n    }\n    async function pollInterval(pollInterval) {\n        let fulfill;\n        const result = new Promise((x) => (fulfill = x));\n        await onTimeout();\n        return result;\n        async function onTimeout() {\n            if (timedOut) {\n                fulfill();\n                return;\n            }\n            const success = await predicate(...args);\n            if (success)\n                fulfill(success);\n            else\n                setTimeout(onTimeout, pollInterval);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}